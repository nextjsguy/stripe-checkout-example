import { GetServerSideProps } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { Stripe } from "stripe";


export default function Home(props : { [key: string]: Stripe.Price[]}) {
  const { prices } = props
  // console.log(prices);

  const router = useRouter()

  const checkout = async () => {
    const lineItems = [{
      price: prices[0].id,
      quantity: 1
    }]

    const res = await fetch("api/checkout", {
      method: "POST",
      body: JSON.stringify({lineItems})
    })

    const data = await res.json()
    
    if(data) router.push(data.session.url)

  }
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        {
          prices.map((price, index) => {
            return <div key={index}>
              {(price.product as Stripe.Product).name}
            </div>
          })
        }

        <button onClick={checkout}>Checkout</button>
      </main>

    </div>
  );
}


export const getServerSideProps: GetServerSideProps = async (context) => {

  // Create stripe client
  const stripe = new Stripe(process.env.STRIPE_SECRET_KEY as string, {
    apiVersion: "2022-11-15"
  })

  const res = await stripe.prices.list({
    limit: 10,
    expand: ["data.product"]
  })

  // If have multiple products of same app, maybe can use metadata? to filter
  const prices = res.data.filter(price => price.active && price.id === "price_1MFRlVFAE55ithNZbCTLPGYQ");
  
  return {
    props: { prices: prices }
  }
}