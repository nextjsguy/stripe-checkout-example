import { GetServerSideProps } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect } from "react";
import { Stripe } from "stripe";
import PurchaseCard from "../components/PurchaseCard";
import { useAppContext } from "../context/CartContext";

type HomeProps = {
  prices: Stripe.Price[]
}

export default function Home(props : HomeProps) {
  const { prices } = props
  // console.log(prices);

  const router = useRouter()

  const { dispatch } = useAppContext()

  useEffect(() => {
    dispatch({
      type: 'set_prices',
      value: prices
    })
    
  }, [prices])

  const checkout = async () => {
    const lineItems = [{
      price: prices[0].id,
      quantity: 1
    }]

    const res = await fetch("api/checkout", {
      method: "POST",
      body: JSON.stringify({lineItems})
    })

    const data = await res.json()
    
    if(data) router.push(data.session.url)

  }
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

        {
          prices.map((price, index) => {            
            return <PurchaseCard key={index} price={price}  />
          })
        }

        {/* <button onClick={checkout}>Checkout</button> */}

    </div>
  );
}


export const getServerSideProps: GetServerSideProps = async (context) => {

  // Create stripe client
  const stripe = new Stripe(process.env.STRIPE_SECRET_KEY as string, {
    apiVersion: "2022-11-15"
  })

  const res = await stripe.prices.list({
    limit: 10,
    expand: ["data.product"]
  })

  // If have multiple products of same app, maybe can use metadata? to filter
  const prices = res.data.filter(price => price.active && price.id === "price_1MFRlVFAE55ithNZbCTLPGYQ");
  
  return {
    props: { prices: prices }
  }
}